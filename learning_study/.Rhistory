ceiling(diggle.linear.power(
delta=3.6,
t=t,
sigma2=sigma2,
R=rho,
alternative="two.sided",
sig.level=0.01,
power = 0.80)$n)}))
colnames(tab) = paste("sigma2 =", sigma2)
rownames(tab) = paste("rho =", rho)
tab
sigma = c(8,10,15)
sigma2 = sigma^2
tab = outer(rho, sigma2,
Vectorize(function(rho, sigma2){
ceiling(diggle.linear.power(
delta=3.6,
t=t,
sigma2=sigma2,
R=rho,
alternative="two.sided",
sig.level=0.01,
power = 0.80)$n)}))
colnames(tab) = paste("sigma2 =", sigma2)
rownames(tab) = paste("rho =", rho)
tab
sigma = c(10,12,15)
sigma2 = sigma^2
tab = outer(rho, sigma2,
Vectorize(function(rho, sigma2){
ceiling(diggle.linear.power(
delta=3.6,
t=t,
sigma2=sigma2,
R=rho,
alternative="two.sided",
sig.level=0.01,
power = 0.80)$n)}))
colnames(tab) = paste("sigma2 =", sigma2)
rownames(tab) = paste("rho =", rho)
tab
za<-qnorm(0.99, mean=0.0, sd=1.0)
zb<-qnorm(0.80, mean=0.0, sd=1.0)
g1_means <- c(0,5,10,15)
g2_means <- c(0,0,2,4)
meandiff<-g1_means-g2_means
lin_contrast<-c(-3,-1,1,3)
corrmat = matrix(c(1.0,0.5,0.5,
0.5,1.0,0.5,
0.5,0.5,1.0),
nrow=3, ncol=3)
corrmat
contdiff <- t(lin_contrast)*meandiff
contdiff
contvar <- t(lin_contrast)*corrmat*contrast
contdiff <- t(lin_contrast)%*%meandiff
contvar <- t(lin_contrast)%*%corrmat%*%contrast
contvar <- t(lin_contrast) %*% corrmat %*% contrast
contdiff <- t(lin_contrast) %*% meandiff
contdiff
contdiff <- t(lin_contrast)*meandiff
contdiff
contvar <- t(lin_contrast)*corrmat
contvar <- t(lin_contrast)%*%corrmat*contrast
contvar <- t(lin_contrast)%*%
contvar <- t(lin_contrast)%*%corrmat
contvar <- t(lin_contrast)%*%corrmat
contdiff <- t(lin_contrast)%*%meandiff
contdiff
contvar <- t(lin_contrast)%*%corrmat
contvar <- lin_contrast%*%corrmat
contvar <- t(lin_contrast)%*%corrmat
install.packages("AICcmodavg")
install.packages("knitr")
install.packages("rmarkdown")
install.packages("tidyverse")
install.packages("knitr")
library(knitr)
install.packages("knitr")
install.packages("rmarkdown")
install.packages("rmarkdown")
n = 4
t = c(0,1,2,3)
rho = c(0.2, 0.4, 0.6, 0.8)
sigma = c(1.0,1.5,2.0)
sigma2 = sigma^2
tab = outer(rho, sigma2,
Vectorize(function(rho, sigma2){
ceiling(diggle.linear.power(
delta=0.455,
t=t,
sigma2=sigma2,
R=rho,
alternative="two.sided",
sig.level=0.01,
power = 0.80)$n)}))
library(longpower)
n = 4
t = c(0,1,2,3)
rho = c(0.2, 0.4, 0.6, 0.8)
sigma = c(1.0,1.5,2.0)
sigma2 = sigma^2
tab = outer(rho, sigma2,
Vectorize(function(rho, sigma2){
ceiling(diggle.linear.power(
delta=0.455,
t=t,
sigma2=sigma2,
R=rho,
alternative="two.sided",
sig.level=0.01,
power = 0.80)$n)}))
colnames(tab) = paste("sigma2 =", sigma2)
rownames(tab) = paste("rho =", rho)
tab
n = 4
t = c(0,1,2,3)
rho = c(0.2, 0.4, 0.6, 0.8)
sigma = c(1.0,1.5,2.0)
sigma2 = sigma^2
tab = outer(rho, sigma2,
Vectorize(function(rho, sigma2){
ceiling(diggle.linear.power(
delta=0.223,
t=t,
sigma2=sigma2,
R=rho,
alternative="two.sided",
sig.level=0.01,
power = 0.80)$n)}))
colnames(tab) = paste("sigma2 =", sigma2)
rownames(tab) = paste("rho =", rho)
tab
library(lme4)
library(haven)
library(arm)
library(effects)
library(lmerTest)
library(readxl)
library(ggplot2)
Forward <- read_excel("C:/Users/u6015231/Box Sync/Statistical Consulting/Daniel Peterson/Forward_5.xlsx", na = "NaN")
Backward <- read_excel("C:/Users/u6015231/Box Sync/Statistical Consulting/Daniel Peterson/Backward_2.xlsx", na = "NaN")
head(Backward)
Backward$subject<-factor(Backward$subject) # We need "subject" to be categorical
summary(Backward$subject)
summary(Backward$FOGstatus) # FOGstatus is currently coded as 0 and 1
Backward$FOG.c<-Backward$FOGstatus-0.5 # We can recode FOG status a -0.5 and 0.5
modelComDispB <- lmer(COMdisp ~ APA + (1|subject), data = Backward, REML=FALSE)
summary(modelComDispB)
summary(modelComDispB)
plot(modelComDispB) # Plotting the residuals against the fitted values will
plot(resid(modelComDispB)) # Plotting the residuals in order will allow us to
hist(resid(modelComDispB)) # We also want an approximately normal distribution
ks.test(resid(modelComDispB),rnorm(1000,0,1))
modelComDispB2 <- lmer(COMdisp ~ APA + (1+APA|subject), data = Backward, REML=FALSE)
summary(modelComDispB2)
plot(modelComDispB2)
plot(resid(modelComDispB2))
hist(resid(modelComDispB2))
ks.test(resid(modelComDispB2),rnorm(1000,0,1))
anova(modelComDispB,modelComDispB2)
modelComDispB3 <- lmer(COMdisp ~ APA*FOG.c + (1+APA|subject), data = Backward, REML=FALSE)
summary(modelComDispB3)
plot(modelComDispB3)
plot(resid(modelComDispB3))
hist(resid(modelComDispB3))
ks.test(resid(modelComDispB3),rnorm(1000,0,1))
anova(modelComDispB,modelComDispB2,modelComDispB3)
install.packages("influence.ME")
library(influence.ME)
qqnorm(resid(modelComDispB2))
library(lme4)
library(haven)
library(arm)
library(effects)
library(lmerTest)
library(readxl)
library(ggplot2)
library(influence.ME)
Forward <- read_excel("C:/Users/u6015231/Box Sync/Statistical Consulting/Daniel Peterson/Forward_5.xlsx", na = "NaN")
Backward <- read_excel("C:/Users/u6015231/Box Sync/Statistical Consulting/Daniel Peterson/Backward_2.xlsx", na = "NaN")
Backward$subject<-factor(Backward$subject) # We need "subject" to be categorical
summary(Backward$subject)
summary(Backward$FOGstatus) # FOGstatus is currently coded as 0 and 1
Backward$FOG.c<-Backward$FOGstatus-0.5 # We can recode FOG status a -0.5 and 0.5
plot(density(Backward$APA, na.rm=TRUE))
summary(Backward$APA)
Backward$lnAPA<-log(Backward$APA+1)
summary(Backward$lnAPA)
Backward$rtAPA<-sqrt(Backward$APA)
summary(Backward$rtAPA)
hist(Backward$lnAPA)
hist(Backward$rtAPA)
summary(Backward$subject)
summary(Backward)
Backward$subject<-factor(Backward$subject) # We need "subject" to be categorical
summary(Backward$subject)
summary(Backward$FOGstatus) # FOGstatus is currently coded as 0 and 1
Backward$FOG.c<-Backward$FOGstatus-0.5 # We can recode FOG status a -0.5 and 0.5
plot(density(Backward$APA, na.rm=TRUE))
summary(Backward$APA)
Backward$lnAPA<-log(Backward$APA+1)
summary(Backward$lnAPA)
Backward$rtAPA<-sqrt(Backward$APA)
summary(Backward$rtAPA)
hist(Backward$lnAPA)
hist(Backward$rtAPA)
modelComDispB <- lmer(COMdisp ~ APA + (1|subject), data = Backward, REML=FALSE)
summary(modelComDispB)
plot(modelComDispB) # Plotting the residuals against the fitted values will
plot(resid(modelComDispB)) # Plotting the residuals in order will allow us to
hist(resid(modelComDispB)) # We also want an approximately normal distribution
modelComDispB2 <- lmer(COMdisp ~ APA + (1+APA|subject), data = Backward, REML=FALSE)
summary(modelComDispB2)
plot(modelComDispB2)
plot(resid(modelComDispB2))
hist(resid(modelComDispB2))
qqnorm(resid(modelComDispB2))
alt.est.1 <- influence(modelComDispB2, "subject")
plot(alt.est.1)
plot(alt.est.1)
cooks.distance(alt.est.1)
modelComDispB3 <- lmer(COMdisp ~ APA*FOG.c + (1+APA|subject), data = Backward, REML=FALSE)
summary(modelComDispB3)
plot(modelComDispB3)
plot(resid(modelComDispB3))
hist(resid(modelComDispB3))
qqnorm(resid(modelComDispB3))
alt.est <- influence(modelComDispB2, "subject")
alt.est <- influence(modelComDispB3, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est) # Any Cook's distance > 1 is a concern
head(Forward)
Forward$subject<-factor(Forward$subject) # We need "subject" to be categorical
summary(Forward$subject)
summary(Forward$FOGstatus) # FOGstatus is currently coded as 0 and 1
Forward$FOG.c<-Forward$FOGstatus-0.5 # We can recode FOG status a -0.5 and 0.5
plot(density(Forward$APA, na.rm=TRUE))
summary(Forward$APA)
Forward$lnAPA<-log(Forward$APA+1)
summary(Forward$lnAPA)
Forward$rtAPA<-sqrt(Forward$APA)
summary(Forward$rtAPA)
hist(Forward$lnAPA)
hist(Forward$rtAPA)
hist(Forward$COMdisp)
summary(Forward$COMdisp)
modelComDispF <- lmer(COMdisp ~ APA + (1|subject), data = Forward, REML=FALSE)
summary(modelComDispF)
plot(modelComDispF)
plot(resid(modelComDispF))
hist(resid(modelComDispF))
qqnorm(resid(modelComDispF))
modelComDispF <- lmer(COMdisp ~ APA + (1|subject), data = Forward, REML=FALSE)
summary(modelComDispF)
plot(modelComDispF)
plot(resid(modelComDispF))
hist(resid(modelComDispF))
qqnorm(resid(modelComDispF))
alt.est <- influence(modelComDispF, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est) # Any Cook's distance > 1 is a concern
plot(alt.est) #plot the slope and intercept for each person
summary(modelComDispF)
modelComDispF2 <- lmer(COMdisp ~ APA + (1+APA|subject), data = Forward, REML=FALSE)
summary(modelComDispF2)
plot(modelComDispF2)
plot(resid(modelComDispF2))
hist(resid(modelComDispF2))
qqnorm(resid(modelComDispF2))
alt.est <- influence(modelComDispF2, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est) # Any Cook's distance > 1 is a concern
modelComDispF3 <- lmer(COMdisp ~ APA*FOG.c + (1+APA|subject), data = Forward, REML=FALSE)
summary(modelComDispF3)
plot(modelComDispF3)
plot(resid(modelComDispF3))
hist(resid(modelComDispF3))
qqnorm(resid(modelComDispF3))
alt.est <- influence(modelComDispF3, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est) # Any Cook's distance > 0.5 is a concern
g1<-ggplot(Forward, aes(x = APA, y = COMdisp)) +
geom_point(aes(bg=subject), pch=21, size=2, col="black") +
stat_smooth(aes(col=subject), method=lm, se=FALSE, size=1.5) +
facet_wrap(~FOGstatus)
g2<-g1+scale_y_continuous(name = "COMdisp") +
scale_x_continuous(name = "Forward APA")
g3 <- g2 + theme_bw()+theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=14), legend.title=element_text(size=14))
plot(g3)
g1<-ggplot(Forward, aes(x = APA, y = COMdisp)) +
geom_point(aes(bg=subject), pch=21, size=2, col="black") +
stat_smooth(aes(col=subject), method=lm, se=FALSE, size=1.5) +
facet_wrap(~subject, ncol=7)
g2<-g1+scale_y_continuous(name = "COMdisp") +
scale_x_continuous(name = "Forward APA")
g3 <- g2 + theme_bw()+theme(axis.text=element_text(size=10, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=10), legend.title=element_text(size=14))
plot(g3)
modelAP_MOSF <- lmer(AP_MOS ~ APA + (1|subject), data = Forward, REML=FALSE)
summary(modelAP_MOSF)
plot(modelAP_MOSF)
plot(resid(modelAP_MOSF))
hist(resid(modelAP_MOSF))
qqnorm(resid(modelAP_MOSF))
modelAP_MOSF2 <- lmer(AP_MOS ~ APA + (1+APA|subject), data = Forward, REML=FALSE)
summary(modelAP_MOSF2)
plot(modelAP_MOSF2)
plot(resid(modelAP_MOSF2))
hist(resid(modelAP_MOSF2))
qqnorm(resid(modelAP_MOSF2))
alt.est <- influence(modelAP_MOSF, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est) # Any Cook's distance > 0.5 is a concern
modelAP_MOSF2 <- lmer(AP_MOS ~ APA + (1+APA|subject), data = Forward, REML=FALSE)
summary(modelAP_MOSF2)
plot(modelAP_MOSF2)
plot(resid(modelAP_MOSF2))
hist(resid(modelAP_MOSF2))
qqnorm(resid(modelAP_MOSF2))
alt.est <- influence(modelAP_MOSF2, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est) # Any Cook's distance > 0.5 is a concern
modelAP_MOSF3 <- lmer(AP_MOS ~ lnAPA*FOG.c + (1+APA|subject), data = Forward, REML=FALSE)
summary(modelAP_MOSF3)
modelAP_MOSF3 <- lmer(AP_MOS ~ APA*FOG.c + (1+APA|subject), data = Forward, REML=FALSE)
summary(modelAP_MOSF3)
plot(modelAP_MOSF3)
plot(resid(modelAP_MOSF3))
hist(resid(modelAP_MOSF3))
qqnorm(resid(modelAP_MOSF3))
alt.est <- influence(modelAP_MOSF3, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est) # Any Cook's distance > 0.5 is a concern
g1<-ggplot(Forward, aes(x = APA, y = AP_MOS)) +
geom_point(aes(bg=subject), pch=21, size=2, col="black") +
stat_smooth(aes(col=subject), method=lm, se=FALSE, size=1.5) +
facet_wrap(~FOGstatus)
g2<-g1+scale_y_continuous(name = "AP_MOS") +
scale_x_continuous(name = "Forward APA")
g3 <- g2 + theme_bw()+theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=14), legend.title=element_text(size=14))
plot(g3)
g1<-ggplot(Forward, aes(x = APA, y = AP_MOS)) +
geom_point(aes(bg=subject), pch=21, size=2, col="black") +
stat_smooth(aes(col=subject), method=lm, se=FALSE, size=1.5) +
facet_wrap(~subject, ncol=7)
g2<-g1+scale_y_continuous(name = "AP_MOS") +
scale_x_continuous(name = "Forward APA")
g3 <- g2 + theme_bw()+theme(axis.text=element_text(size=10, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=10), legend.title=element_text(size=14))
plot(g3)
summary(modelComDispF3)
g1<-ggplot(Forward, aes(x = APA, y = COMdisp)) +
geom_point(aes(bg=subject), pch=21, size=2, col="black") +
stat_smooth(aes(col=subject), method=lm, se=FALSE, size=1.5) +
facet_wrap(~subject, ncol=7)
g2<-g1+scale_y_continuous(name = "COMdisp") +
scale_x_continuous(name = "Forward APA")
g3 <- g2 + theme_bw()+theme(axis.text=element_text(size=10, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=10), legend.title=element_text(size=14))
plot(g3)
modelAP_MOSB <- lmer(AP_MOS ~ APA + (1|subject), Backward)
summary(modelAP_MOSB)
plot(modelAP_MOSB)
plot(resid(modelAP_MOSB))
hist(resid(modelAP_MOSB))
qqnorm(resid(modelAP_MOSB))
alt.est <- influence(modelAP_MOSB, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est)
modelAP_MOSB2 <- lmer(AP_MOS ~ APA + (1+APA|subject), Backward)
summary(modelAP_MOSB2)
plot(modelAP_MOSB2)
plot(resid(modelAP_MOSB2))
hist(resid(modelAP_MOSB2))
qqnorm(resid(modelAP_MOSB2))
alt.est <- influence(modelAP_MOSB2, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est)
modelAP_MOSB3 <- lmer(AP_MOS ~ APA*FOG.c + (1+APA|subject), data = Backward, REML=FALSE)
summary(modelAP_MOSB3)
plot(resid(modelAP_MOSB3))
plot(modelAP_MOSB3)
hist(resid(modelAP_MOSB3))
qqnorm(resid(modelAP_MOSB3))
anova(modelAP_MOSB, modelAP_MOSB2, modelAP_MOSB3)
alt.est <- influence(modelComDispB3, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est)
summary(modelComDispB3)
modelAP_MOSB <- lmer(AP_MOS ~ APA + (1|subject), Backward)
summary(modelAP_MOSB)
plot(modelAP_MOSB)
plot(resid(modelAP_MOSB))
hist(resid(modelAP_MOSB))
qqnorm(resid(modelAP_MOSB))
alt.est <- influence(modelAP_MOSB, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est)
summary(modelAP_MOSB)
modelAP_MOSB2 <- lmer(AP_MOS ~ APA + (1+APA|subject), Backward)
summary(modelAP_MOSB2)
plot(modelAP_MOSB2)
plot(resid(modelAP_MOSB2))
hist(resid(modelAP_MOSB2))
qqnorm(resid(modelAP_MOSB2))
alt.est <- influence(modelAP_MOSB2, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est)
summary(modelAP_MOSB2)
modelAP_MOSB3 <- lmer(AP_MOS ~ APA*FOG.c + (1+APA|subject), data = Backward, REML=FALSE)
summary(modelAP_MOSB3)
plot(modelAP_MOSB3)
alt.est <- influence(modelAP_MOSB3, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est)
anova(modelAP_MOSB, modelAP_MOSB2, modelAP_MOSB3)
g1<-ggplot(Backward, aes(x = AP_MOS, y = lnAPA)) +
geom_point(aes(bg=subject), pch=21, size=2, col="black") +
stat_smooth(aes(col=subject), method=lm, se=FALSE, size=1.5) +
facet_wrap(~subject, ncol=7)
g2<-g1+scale_x_continuous(name = "AP_MOS") +
scale_y_continuous(name = "Backwards ln(APA)")
g3 <- g2 + theme_bw()+theme(axis.text=element_text(size=10, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=10), legend.title=element_text(size=14))
plot(g3)
modelML_MOSB <- lmer(ML_MOS ~ APA + (1|subject), data = Backward, REML=FALSE)
summary(modelML_MOSB)
plot(modelML_MOSB)
plot(resid(modelML_MOSB))
hist(resid(modelML_MOSB))
qqnorm(resid(modelML_MOSB))
alt.est <- influence(modelML_MOSB, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est)
summary(modelML_MOSB)
modelML_MOSB2 <- lmer(ML_MOS ~ APA + (1+APA|subject), data = Backward, REML=FALSE)
summary(modelML_MOSB2)
plot(modelML_MOSB2)
plot(resid(modelML_MOSB2))
hist(resid(modelML_MOSB2))
qqnorm(resid(modelML_MOSB2))
alt.est <- influence(modelML_MOSB2, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est)
summary(modelML_MOSB2)
modelML_MOSB3 <- lmer(ML_MOS ~ APA*FOG.c + (1+APA|subject), data = Backward, REML=FALSE)
summary(modelML_MOSB3)
plot(modelML_MOSB3)
plot(resid(modelML_MOSB3))
hist(resid(modelML_MOSB3))
qqnorm(resid(modelML_MOSB3))
alt.est <- influence(modelML_MOSB3, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est)
anova(modelML_MOSB,modelML_MOSB2,modelML_MOSB3)
modelML_MOSF <- lmer(ML_MOS ~ APA + (1|subject), data = Forward, REML=FALSE)
summary(modelML_MOSF)
modelML_MOSF <- lmer(ML_MOS ~ APA + (1|subject), data = Forward, REML=FALSE)
summary(modelML_MOSF)
plot(modelML_MOSF)
plot(resid(modelML_MOSF))
hist(resid(modelML_MOSF))
qqnorm(resid(modelML_MOSF))
alt.est <- influence(modelML_MOSB, "subject")
plot(alt.est) #plot the slope and intercept for each person
alt.est <- influence(modelML_MOSF, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est)
modelML_MOSF2 <- lmer(ML_MOS ~ APA + (1+APA|subject), data = Forward, REML=FALSE)
summary(modelML_MOSB2)
summary(modelML_MOSF2)
plot(modelML_MOSF2)
hist(resid(modelML_MOSF2))
qqnorm(resid(modelML_MOSF2))
alt.est <- influence(modelML_MOSF2, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est)
summary(modelML_MOSF2)
modelML_MOSF3 <- lmer(ML_MOS ~ APA*FOG.c + (1+APA|subject), data = Forward, REML=FALSE)
summary(modelML_MOSF3)
summary(modelML_MOSF3)
plot(modelML_MOSF3)
plot(resid(modelML_MOSF3))
hist(resid(modelML_MOSF3))
qqnorm(resid(modelML_MOSF3))
alt.est <- influence(modelML_MOSF3, "subject")
plot(alt.est) #plot the slope and intercept for each person
cooks.distance(alt.est)
anova(modelML_MOSB,modelML_MOSB2,modelML_MOSB3)
library("plyr"); library("ggplot2"); library("lme4"); library("lmerTest");
library("ez"); library("car"); library("dplyr")
getwd()
setwd("C:/Users/u6015231/Documents/GitHub/difficulty_EEG/")
list.files("./data/")
setwd("C:/Users/u6015231/Documents/GitHub/difficulty_EEG/learning_study/")
list.files("./data/")
SCORES<-read.csv("./data/data_SCORES.csv", header = TRUE)
head(SCORES)
SURVEY<-read.csv("./data/data_SURVEY.csv", header = TRUE)
head(SURVEY)
COMB<-read.csv("./data/data_SCORES_COMB_LONG.csv", header = TRUE)
head(COMB)
COMB$pretest.c<-COMB$pretest-mean(COMB$pretest)
