DATA$t_obs <- NULL
DATA$p_value <- NULL
for (i in 1:length(DATA$index)) {
s1 <- sample(pop1, n1, replace = FALSE, prob = NULL)
s2 <- sample(pop2, n2, replace = FALSE, prob = NULL)
m1<-mean(s1)
m2<-mean(s2)
sd1<-sd(s1)
sd2<-sd(s2)
t_crit_90<-qt(0.95, (n1+n2-2))
t_crit_95<-qt(0.975, (n1+n2-2))
DATA$sp[i] = sqrt(((n1-1)*(sd1*sd1)+(n2-1)*(sd2*sd2))/(n1+n2-2))
DATA$ES[i]<-(m1-m2)
DATA$Cohen_d[i]<-(m1-m2)/DATA$sp[i]
DATA$SE<-sqrt(((DATA$sp[i]^2)/n1)+((DATA$sp[i]^2)/n2))
DATA$LL_90[i] <- DATA$ES[i]-t_crit_90*DATA$SE[i]
DATA$UL_90[i] <- DATA$ES[i]+t_crit_90*DATA$SE[i]
DATA$LL_95[i] <- DATA$ES[i]-t_crit_95*DATA$SE[i]
DATA$UL_95[i] <- DATA$ES[i]+t_crit_95*DATA$SE[i]
DATA$t_obs <- DATA$ES[i]/DATA$SE[i]
DATA$p_value[i] <- 2*pt(abs(DATA$ES[i]/DATA$SE[i]), (n1+n2-2), lower=FALSE)
}
DATA
set.seed(143)
mu1<-0
mu2<-0
sigma1<-1
sigma2<-1
pop1<-rnorm(n=10000, mean=mu1, sd=sigma1)
pop2<-rnorm(n=10000, mean=mu2, sd=sigma2)
n1 = 10 #size of sample 1
n2 = 10 #size of sample 2
index<-c(1:10) # Set the upper limit to the number of experiments you want to run
DATA<-data.frame(index) #We will create an empty dataframe to store our output in...
DATA$sp<-NULL
DATA$ES <- NULL
DATA$Cohen_d <- NULL
DATA$SE <- NULL
DATA$LL_90 <- NULL
DATA$UL_90 <- NULL
DATA$LL_95 <- NULL
DATA$UL_95 <- NULL
DATA$t_obs <- NULL
DATA$p_value <- NULL
for (i in 1:length(DATA$index)) {
s1 <- sample(pop1, n1, replace = FALSE, prob = NULL)
s2 <- sample(pop2, n2, replace = FALSE, prob = NULL)
m1<-mean(s1)
m2<-mean(s2)
sd1<-sd(s1)
sd2<-sd(s2)
t_crit_90<-qt(0.95, (n1+n2-2))
t_crit_95<-qt(0.975, (n1+n2-2))
DATA$sp[i] = sqrt(((n1-1)*(sd1*sd1)+(n2-1)*(sd2*sd2))/(n1+n2-2))
DATA$ES[i] <- (m1-m2)
DATA$Cohen_d[i] <- (m1-m2)/DATA$sp[i]
DATA$SE[i] <- sqrt(((DATA$sp[i]^2)/n1)+((DATA$sp[i]^2)/n2))
DATA$LL_90[i] <- DATA$ES[i]-t_crit_90*DATA$SE[i]
DATA$UL_90[i] <- DATA$ES[i]+t_crit_90*DATA$SE[i]
DATA$LL_95[i] <- DATA$ES[i]-t_crit_95*DATA$SE[i]
DATA$UL_95[i] <- DATA$ES[i]+t_crit_95*DATA$SE[i]
DATA$t_obs <- DATA$ES[i]/DATA$SE[i]
DATA$p_value[i] <- 2*pt(abs(DATA$ES[i]/DATA$SE[i]), (n1+n2-2), lower=FALSE)
}
DATA
set.seed(143)
mu1<-0
mu2<-0
sigma1<-1
sigma2<-1
pop1<-rnorm(n=10000, mean=mu1, sd=sigma1)
pop2<-rnorm(n=10000, mean=mu2, sd=sigma2)
n1 = 10 #size of sample 1
n2 = 10 #size of sample 2
index<-c(1:10) # Set the upper limit to the number of experiments you want to run
DATA<-data.frame(index) #We will create an empty dataframe to store our output in...
DATA$sp<-NULL
DATA$ES <- NULL
DATA$Cohen_d <- NULL
DATA$SE <- NULL
DATA$LL_90 <- NULL
DATA$UL_90 <- NULL
DATA$LL_95 <- NULL
DATA$UL_95 <- NULL
DATA$t_obs <- NULL
DATA$p_value <- NULL
for (i in 1:length(DATA$index)) {
s1 <- sample(pop1, n1, replace = FALSE, prob = NULL)
s2 <- sample(pop2, n2, replace = FALSE, prob = NULL)
m1<-mean(s1)
m2<-mean(s2)
sd1<-sd(s1)
sd2<-sd(s2)
t_crit_90<-qt(0.95, (n1+n2-2))
t_crit_95<-qt(0.975, (n1+n2-2))
DATA$sp[i] = sqrt(((n1-1)*(sd1*sd1)+(n2-1)*(sd2*sd2))/(n1+n2-2))
DATA$ES[i] <- (m1-m2)
DATA$Cohen_d[i] <- (m1-m2)/DATA$sp[i]
DATA$SE[i] <- sqrt(((DATA$sp[i]^2)/n1)+((DATA$sp[i]^2)/n2))
DATA$LL_90[i] <- DATA$ES[i]-t_crit_90*DATA$SE[i]
DATA$UL_90[i] <- DATA$ES[i]+t_crit_90*DATA$SE[i]
DATA$LL_95[i] <- DATA$ES[i]-t_crit_95*DATA$SE[i]
DATA$UL_95[i] <- DATA$ES[i]+t_crit_95*DATA$SE[i]
DATA$t_obs[i] <- DATA$ES[i]/DATA$SE[i]
DATA$p_value[i] <- 2*pt(abs(DATA$ES[i]/DATA$SE[i]), (n1+n2-2), lower=FALSE)
}
DATA
set.seed(143)
mu1<-0
mu2<-0
sigma1<-1
sigma2<-1
pop1<-rnorm(n=10000, mean=mu1, sd=sigma1)
pop2<-rnorm(n=10000, mean=mu2, sd=sigma2)
n1 = 10 #size of sample 1
n2 = 10 #size of sample 2
index<-c(1:10000) # Set the upper limit to the number of experiments you want to run
DATA<-data.frame(index) #We will create an empty dataframe to store our output in...
DATA$sp<-NULL
DATA$ES <- NULL
DATA$Cohen_d <- NULL
DATA$SE <- NULL
DATA$LL_90 <- NULL
DATA$UL_90 <- NULL
DATA$LL_95 <- NULL
DATA$UL_95 <- NULL
DATA$t_obs <- NULL
DATA$p_value <- NULL
for (i in 1:length(DATA$index)) {
s1 <- sample(pop1, n1, replace = FALSE, prob = NULL)
s2 <- sample(pop2, n2, replace = FALSE, prob = NULL)
m1<-mean(s1)
m2<-mean(s2)
sd1<-sd(s1)
sd2<-sd(s2)
t_crit_90<-qt(0.95, (n1+n2-2))
t_crit_95<-qt(0.975, (n1+n2-2))
DATA$sp[i] = sqrt(((n1-1)*(sd1*sd1)+(n2-1)*(sd2*sd2))/(n1+n2-2))
DATA$ES[i] <- (m1-m2)
DATA$Cohen_d[i] <- (m1-m2)/DATA$sp[i]
DATA$SE[i] <- sqrt(((DATA$sp[i]^2)/n1)+((DATA$sp[i]^2)/n2))
DATA$LL_90[i] <- DATA$ES[i]-t_crit_90*DATA$SE[i]
DATA$UL_90[i] <- DATA$ES[i]+t_crit_90*DATA$SE[i]
DATA$LL_95[i] <- DATA$ES[i]-t_crit_95*DATA$SE[i]
DATA$UL_95[i] <- DATA$ES[i]+t_crit_95*DATA$SE[i]
DATA$t_obs[i] <- DATA$ES[i]/DATA$SE[i]
DATA$p_value[i] <- 2*pt(abs(DATA$ES[i]/DATA$SE[i]), (n1+n2-2), lower=FALSE)
}
head(DATA)
DATA$sig<-(p_value<0.05)
DATA$sig<-(DATA$p_value<0.05)
head(DATA)
summary(DATA$sig)
DATA$harm<-(LL_90>(-0.2))
DATA$harm<-(DATA$LL_90>(-0.2))
DATA$harm<-(DATA$LL_90>(-0.2))
DATA$benefit<-(DATA$LL_90>(0.2))
DATA$unclear<- (DATA$harm==TRUE & DATA$benefit==TRUE)
summary(DATA$unclear)
t_crit_90<-qt(0.95, (n1+n2-2))
t_crit_25<-qt(0.75, (n1+n2-2))
t_crit_95<-qt(0.975, (n1+n2-2))
set.seed(143)
mu1<-0
mu2<-0
sigma1<-1
sigma2<-1
pop1<-rnorm(n=10000, mean=mu1, sd=sigma1)
pop2<-rnorm(n=10000, mean=mu2, sd=sigma2)
n1 = 10 #size of sample 1
n2 = 10 #size of sample 2
index<-c(1:10000) # Set the upper limit to the number of experiments you want to run
DATA<-data.frame(index) #We will create an empty dataframe to store our output in...
DATA$sp<-NULL
DATA$ES <- NULL
DATA$Cohen_d <- NULL
DATA$SE <- NULL
DATA$LL_90 <- NULL
DATA$UL_90 <- NULL
DATA$LL_25 <- NULL
DATA$UL_75 <- NULL
DATA$LL_95 <- NULL
DATA$UL_95 <- NULL
DATA$t_obs <- NULL
DATA$p_value <- NULL
for (i in 1:length(DATA$index)) {
s1 <- sample(pop1, n1, replace = FALSE, prob = NULL)
s2 <- sample(pop2, n2, replace = FALSE, prob = NULL)
m1<-mean(s1)
m2<-mean(s2)
sd1<-sd(s1)
sd2<-sd(s2)
t_crit_90<-qt(0.95, (n1+n2-2))
t_crit_25<-qt(0.75, (n1+n2-2))
t_crit_95<-qt(0.975, (n1+n2-2))
DATA$sp[i] = sqrt(((n1-1)*(sd1*sd1)+(n2-1)*(sd2*sd2))/(n1+n2-2))
DATA$ES[i] <- (m1-m2)
DATA$Cohen_d[i] <- (m1-m2)/DATA$sp[i]
DATA$SE[i] <- sqrt(((DATA$sp[i]^2)/n1)+((DATA$sp[i]^2)/n2))
DATA$LL_90[i] <- DATA$ES[i]-t_crit_90*DATA$SE[i]
DATA$UL_90[i] <- DATA$ES[i]+t_crit_90*DATA$SE[i]
DATA$LL_25[i] <- DATA$ES[i]-t_crit_90*DATA$SE[i]
DATA$UL_75[i] <- DATA$ES[i]+t_crit_90*DATA$SE[i]
DATA$LL_95[i] <- DATA$ES[i]-t_crit_95*DATA$SE[i]
DATA$UL_95[i] <- DATA$ES[i]+t_crit_95*DATA$SE[i]
DATA$t_obs[i] <- DATA$ES[i]/DATA$SE[i]
DATA$p_value[i] <- 2*pt(abs(DATA$ES[i]/DATA$SE[i]), (n1+n2-2), lower=FALSE)
}
head(DATA)
set.seed(143)
mu1<-0
mu2<-0
sigma1<-1
sigma2<-1
pop1<-rnorm(n=10000, mean=mu1, sd=sigma1)
pop2<-rnorm(n=10000, mean=mu2, sd=sigma2)
n1 = 10 #size of sample 1
n2 = 10 #size of sample 2
index<-c(1:10000) # Set the upper limit to the number of experiments you want to run
DATA<-data.frame(index) #We will create an empty dataframe to store our output in...
DATA$sp<-NULL
DATA$ES <- NULL
DATA$Cohen_d <- NULL
DATA$SE <- NULL
DATA$LL_90 <- NULL
DATA$UL_90 <- NULL
DATA$LL_25 <- NULL
DATA$UL_75 <- NULL
DATA$LL_95 <- NULL
DATA$UL_95 <- NULL
DATA$t_obs <- NULL
DATA$p_value <- NULL
for (i in 1:length(DATA$index)) {
s1 <- sample(pop1, n1, replace = FALSE, prob = NULL)
s2 <- sample(pop2, n2, replace = FALSE, prob = NULL)
m1<-mean(s1)
m2<-mean(s2)
sd1<-sd(s1)
sd2<-sd(s2)
t_crit_90<-qt(0.95, (n1+n2-2))
t_crit_25<-qt(0.75, (n1+n2-2))
t_crit_95<-qt(0.975, (n1+n2-2))
DATA$sp[i] = sqrt(((n1-1)*(sd1*sd1)+(n2-1)*(sd2*sd2))/(n1+n2-2))
DATA$ES[i] <- (m1-m2)
DATA$Cohen_d[i] <- (m1-m2)/DATA$sp[i]
DATA$SE[i] <- sqrt(((DATA$sp[i]^2)/n1)+((DATA$sp[i]^2)/n2))
DATA$LL_90[i] <- DATA$ES[i]-t_crit_90*DATA$SE[i]
DATA$UL_90[i] <- DATA$ES[i]+t_crit_90*DATA$SE[i]
DATA$LL_25[i] <- DATA$ES[i]-t_crit_25*DATA$SE[i]
DATA$UL_75[i] <- DATA$ES[i]+t_crit_25*DATA$SE[i]
DATA$LL_95[i] <- DATA$ES[i]-t_crit_95*DATA$SE[i]
DATA$UL_95[i] <- DATA$ES[i]+t_crit_95*DATA$SE[i]
DATA$t_obs[i] <- DATA$ES[i]/DATA$SE[i]
DATA$p_value[i] <- 2*pt(abs(DATA$ES[i]/DATA$SE[i]), (n1+n2-2), lower=FALSE)
}
head(DATA)
DATA$sig<-(DATA$p_value<0.05)
summary(DATA$sig)
DATA$unclear<- ((DATA$LL_90>(-0.2)==TRUE & (DATA$UL_90>(0.2)==TRUE)
summary(DATA$unclear)
DATA$unclear<- ((DATA$LL_90>(-0.2)==TRUE & (DATA$UL_90>(0.2)==TRUE))
summary(DATA$unclear)
DATA$unclear<- ((DATA$LL_90>(-0.2)==TRUE & (DATA$UL_90>(0.2))==TRUE))
DATA$unclear<- ((DATA$LL_90>(-0.2))== TRUE & (DATA$UL_90>(0.2))==TRUE)
summary(DATA$unclear)
DATA$unclear<- ((DATA$LL_90>(-0.2))== TRUE && (DATA$UL_90>(0.2))==TRUE)
summary(DATA$unclear)
DATA$unclear<- ((DATA$LL_90>(-0.2))== TRUE & (DATA$UL_90>(0.2))==TRUE)
DATA$unclear<- ((DATA$LL_90<(-0.2))==TRUE & (DATA$UL_90>(0.2))==TRUE)
summary(DATA$unclear)
DATA$unclear<- ((DATA$LL_90<(-0.2)==TRUE) & (DATA$UL_90>(0.2)==TRUE))
DATA$unclear<- ((DATA$LL_90<(-0.2)==TRUE) && (DATA$UL_90>(0.2)==TRUE))
DATA$unclear<- ((DATA$LL_90<(-0.2)=TRUE) & (DATA$UL_90>(0.2)=TRUE))
DATA$unclear<- ((DATA$LL_90<(-0.2)==TRUE) & (DATA$UL_90>(0.2)==TRUE))
(DATA$LL_90<(-0.2)==TRUE) & (DATA$UL_90>(0.2)==TRUE)
DATA$unclear<- ((DATA$LL_90<(-0.2)) & (DATA$UL_90>(0.2)))
summary(DATA$unclear)
DATA$benefit <- (DATA$UL_90>(0.2))
DATA$unclear<- (DATA$harm==TRUE & DATA$benefit==TRUE)
DATA$unclear<- (DATA$harm==TRUE && DATA$benefit==TRUE)
summary(DATA$unclear)
DATA$harm <- (DATA$LL_90<(-0.2))
DATA$benefit <- (DATA$UL_90>(0.2))
summary(DATA$sig)
summary(DATA$sig)
summary(DATA$harm)
summary(DATA$benefit)
head(DATA)
DATA$unclear <- (DATA$harm==TRUE & DATA$benefit==TRUE)
summary(DATA$unclear)
DATA$no_benefit <- (DATA$UL_90>(0.2))
summary(DATA$no_benefit)
DATA$unclear <- (DATA$harm==TRUE & DATA$no_benefit==TRUE)
summary(DATA$unclear)
library("ggplot2"); library("car"); library("dplyr");
install.packages("ggplot2")
library("ggplot2"); library("car"); library("dplyr");
setwd("C:/Users/kelop/Documents/")
list.files()
DATA<-read.csv("./data_EEG_MASTER.csv", header = TRUE, sep=",",
na.strings=c("NA","NaN"," ",""))
DAT2<-subset(DATA, Hz == c(4:13))
DAT2<-subset(DATA, Hz <= 13)
DAT2<-subset(DAT2, Hz >= 4)
summary(DAT2$Hz)
summary(as.factor(DAT2$Hz))
DAT3<-subset(DAT2, select=c("subID", "group", "phase", "block", "Hz",
"Fp1", "Fp2",	"AF7",	"AF3",	"AF4",	"AF8",
"F7",	"F5",	"F3",	"Fz",	"F4",	"F6",	"F8"))
head(DAT3)
DAT3<-subset(DAT2, select=c("subID", "group", "phase", "block", "Hz",
"AF7",	"AF3",	"AF4",	"AF8",
"F7",	"F5",	"F3",	"Fz",	"F4",	"F6",	"F8"))
head(DAT3)
DAT3$ln_AF7<-ln(DAT3$AF7)
DAT3$ln_AF7<-log(DAT3$AF7)
DAT3$ln_AF4<-log(DAT3$AF8)
DAT3$ln_AF7<-log(DAT3$AF7)
DAT3$ln_AF3<-log(DAT3$AF3)
DAT3$ln_AF4<-log(DAT3$AF4)
DAT3$ln_AF8<-log(DAT3$AF8)
DAT3$ln_F7<-log(DAT3$F7)
DAT3$ln_F5<-log(DAT3$F5)
DAT3$ln_F3<-log(DAT3$F3)
DAT3$ln_Fz<-log(DAT3$Fz)
DAT3$ln_F4<-log(DAT3$F4)
DAT3$ln_F6<-log(DAT3$F6)
DAT3$ln_F8<-log(DAT3$F8)
head(DAT3)
ALPHA<-subset(DAT3, Hz >= 8)
THETA<-subset(DAT3, Hz <= 7)
summary(as.factor(ALPHA$Hz))
THETA<-subset(DAT3, Hz <= 7)
summary(as.factor(THETA$Hz))
head(ALPHA)
ALPHA_mean<-summarize(group_by(DATA, c("subID","block")),
ln_AF7n = mean(ln_AF7, na.rm=TRUE))
ALPHA_mean<- ALPDA %>%
group_by(subID,block) %>%
summarize(ln_AF7n = mean(ln_AF7, na.rm=TRUE))
ALPHA_mean<- ALPHA %>%
group_by(subID,block) %>%
summarize(ln_AF7n = mean(ln_AF7, na.rm=TRUE))
head(ALPHA_mean)
head(DAT3)
ALPHA_mean<- ALPHA %>%
group_by(subID,phase) %>%
summarize(ln_AF7n = mean(ln_AF7, na.rm=TRUE))
head(ALPHA_mean)
ALPHA_mean<- ALPHA %>%
group_by(subID,phase) %>%
summarize(ln_AF7 = mean(ln_AF7, na.rm=TRUE),
ln_AF3 = mean(ln_AF3, na.rm=TRUE),
ln_AF4 = mean(ln_AF4, na.rm=TRUE),
ln_AF8 = mean(ln_AF8, na.rm=TRUE),
ln_F7 = mean(ln_F7, na.rm=TRUE),
ln_F5 = mean(ln_F5, na.rm=TRUE),
ln_F3 = mean(ln_F3, na.rm=TRUE),
ln_F4 = mean(ln_F4, na.rm=TRUE),
ln_F6 = mean(ln_F6, na.rm=TRUE),
ln_F8 = mean(ln_F8, na.rm=TRUE))
head(ALPHA_mean)
mutate(ALPHA_mean, Left = mean(ln_AF7, ln_AF3, F3, F5, F7))
mutate(ALPHA_mean, Left = (ln_AF7+ln_AF3+F3+F5+F7)/5)
mutate(ALPHA_mean, Left = (ln_AF7+ln_AF3+ln_F3+ln_F5+ln_F7)/5)
mutate(ALPHA_mean, Left = (ln_AF7+ln_AF3)/2)
mutate(ALPHA_mean, Left = (ln_AF7+ln_AF3))
head(ALPHA_mean)
mutate(ALPHA_mean, Left = ln_AF7+ln_AF3)
mutate(ALPHA_mean, new = ln_AF7+ln_AF3)
ALPHA_mean %>% mutate(
Left_alpha = ln_AF7 + ln_AF3,
Right_alpha = ln_AF8 + ln_AF4)
ALPHA_mean %>% mutate(
Left_alpha = "ln_AF7" + "ln_AF3",
Right_alpha = "ln_AF8" + "ln_AF4")
ALPHA_mean$Left<-(ALPHA_mean$ln_AF7+ALPHA_mean$ln_AF3+ALPHA_mean$ln_F7+
ALPHA_mean$ln_F5+ALPHA_mean$ln_F3)/5
head(ALPHA_mean)
head(ALPHA_mean)
ALPHA_mean$Right<-(ALPHA_mean$ln_AF8+ALPHA_mean$ln_AF4+ALPHA_mean$ln_F8+
ALPHA_mean$ln_F6+ALPHA_mean$ln_F4)/5
ALPHA_mean$FAS<-ALPHA_mean$Right-ALPHA_mean$Left
head(ALPHA_mean)
write.csv(ALPHA_mean, "./ALPHA.csv")
ALPHA_pre<- subset(ALPHA_mean, phase=="pretest")
keeps <- c("subID", "FAS")
ALPHA_pre[keeps]
NEW<-merge(x=ALPHA_mean, y=ALPHA_pre, by="subID", aa=TRUE)
head(NEW)
ALPHA_pre<- subset(ALPHA_mean, phase=="pretest")
ALPHA_pre$pre_FAS<-ALPHA_pre$FAS
keeps <- c("subID", "pre_FAS")
ALPHA_pre<-ALPHA_pre[keeps]
NEW<-merge(x=ALPHA_mean, y=ALPHA_pre, by="subID", aa=TRUE)
head(NEW)
ALPHA_mean<-merge(x=ALPHA_mean, y=ALPHA_pre, by="subID", aa=TRUE)
head(ALPHA_mean)
ALPHA_mean$FAS_alpha_Drest<-ALPHA_mean$FAS-ALPHA_mean$pre_FAS
ALPHA_mean$delta_FAS_rest<-ALPHA_mean$FAS-ALPHA_mean$pre_FAS
ALPHA_mean<- ALPHA %>%
group_by(subID,phase) %>%
summarize(ln_AF7 = mean(ln_AF7, na.rm=TRUE),
ln_AF3 = mean(ln_AF3, na.rm=TRUE),
ln_AF4 = mean(ln_AF4, na.rm=TRUE),
ln_AF8 = mean(ln_AF8, na.rm=TRUE),
ln_F7 = mean(ln_F7, na.rm=TRUE),
ln_F5 = mean(ln_F5, na.rm=TRUE),
ln_F3 = mean(ln_F3, na.rm=TRUE),
ln_F4 = mean(ln_F4, na.rm=TRUE),
ln_F6 = mean(ln_F6, na.rm=TRUE),
ln_F8 = mean(ln_F8, na.rm=TRUE))
head(ALPHA_mean)
ALPHA_mean$Left<-(ALPHA_mean$ln_AF7+ALPHA_mean$ln_AF3+ALPHA_mean$ln_F7+
ALPHA_mean$ln_F5+ALPHA_mean$ln_F3)/5
ALPHA_mean$Right<-(ALPHA_mean$ln_AF8+ALPHA_mean$ln_AF4+ALPHA_mean$ln_F8+
ALPHA_mean$ln_F6+ALPHA_mean$ln_F4)/5
ALPHA_mean$FAS<-ALPHA_mean$Right-ALPHA_mean$Left
ALPHA_pre<- subset(ALPHA_mean, phase=="pretest")
ALPHA_pre$pre_FAS<-ALPHA_pre$FAS
keeps <- c("subID", "pre_FAS")
ALPHA_pre<-ALPHA_pre[keeps]
ALPHA_mean<-merge(x=ALPHA_mean, y=ALPHA_pre, by="subID", aa=TRUE)
head(ALPHA_mean)
ALPHA_mean$delta_FAS_rest<-ALPHA_mean$FAS-ALPHA_mean$pre_FAS
write.csv(ALPHA_mean, "./ALPHA.csv")
head(THETA)
THETA_mean<- THETA %>%
group_by(subID,phase) %>%
summarize(ln_Fz = mean(ln_Fz, na.rm=TRUE))
head(THETA_mean)
THETA_pre<- subset(THETA_mean, phase=="pretest")
THETA_pre$pre_MFT<-THETA_pre$ln_Fz
keeps <- c("subID", "pre_MFT")
THETA_pre<-THETA_pre[keeps]
THETA_mean<-merge(x=THETA_mean, y=THETA_pre, by="subID", aa=TRUE)
head(THETA_mean)
THETA_mean$delta_MFT_rest<-THETA_mean$ln_Fz-THETA_mean$pre_MFT
write.csv(THETA_mean, "./THETA.csv")
write.csv(THETA_mean, "./THETA.csv")
setwd("C:/Users/kelop/Documents/GitHub/difficulty EEG study/")
setwd("C:/Users/kelop/Documents/GitHub/difficulty_EEG/prac_study")
list.files()
SCORES<-read.csv("./data/data_SCORES.csv", header = TRUE)
head(SCORES)
SCORES<-read.csv("./data_SCORES.csv", header = TRUE)
head(SCORES)
PRAC<-subset(SCORES, phase != "resting")
PRAC<-subset(PRAC, phase != "posttest")
PRAC<-subset(PRAC, phase != "pretest")
PRAC$phase<-factor(PRAC$phase)
summary(PRAC$phase)
PRAC$self.c<-(as.numeric(PRAC$group)-1.5)*(-1)
head(PRAC)
PRAC$self.c
summary(PRAC$diff)
summary(PRAC$scoreQ)
PRAC$scoreQ.c<-PRAC$scoreQ-mean(PRAC$scoreQ)
summary(PRAC$block)
PRAC$block.c<-PRAC$block-mean(PRAC$block)
summary(PRAC$block.c)
PRAC$eng_st.c<-PRAC$eng_st-mean(PRAC$eng_st)
summary(PRAC$eng_st.c)
PRAC$mot_st.c<-PRAC$mot_st-mean(PRAC$mot_st)
summary(PRAC$mot_st.c)
head(PRAC)
summary(PRAC$group)
SELF<-subset(PRAC, group=="self")
YOKE<-subset(PRAC, group=="yoked")
g1<-ggplot(PRAC, aes(x = jitter(block), y = score)) +
geom_point(aes(group=subID), fill="grey", pch=21, size=2, alpha = .5) +
geom_line(aes(group=subID), col="grey") +
stat_smooth(aes(lty=group), col="black", method="loess", lwd=1.5, se=FALSE)+
facet_wrap(~group, ncol=1)
g2<-g1+scale_x_continuous(name = "Block of Practice") +
scale_y_continuous(name = "In-Game Score")
g3 <- g2 + theme_bw() +
theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
plot.title=element_text(size=16,face="bold", hjust = 0.5)) +
theme(strip.text.x = element_text(size = 16))+
theme(legend.position="none")
plot(g3)
g1<-ggplot(SELF, aes(x = jitter(block), y = jitter(diff))) +
geom_point(aes(group=subID), fill="grey", pch=21, size=2, alpha = .5) +
geom_line(aes(group=subID), col="grey") +
stat_smooth(col="black", method="loess", lwd=1.5, se=FALSE)
g2<-g1+scale_x_continuous(name = "Block of Practice") +
scale_y_continuous(name = "Difficulty", breaks=c(1:9))
g3 <- g2 + theme_bw() +
theme(axis.text=element_text(size=16, colour="black"),
axis.title=element_text(size=16,face="bold"),
plot.title=element_text(size=16,face="bold", hjust = 0.5)) +
theme(strip.text.x = element_text(size = 16))+
theme(legend.position="none")
plot(g3)
head(PRAC)
BY_SUB<-summarize(group_by(PRAC, subID),
group = group[1],
meanScore = mean(score, na.rm=TRUE),
meanDiff = mean(diff, na.rm=TRUE),
meanEng = mean(eng_st, na.rm=TRUE),
meanMot = mean(mot_st, na.rm=TRUE))
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
